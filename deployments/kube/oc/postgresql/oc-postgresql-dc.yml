apiVersion: v1
kind: DeploymentConfig
metadata:
  name: postgresql
  labels:
    role: database
    app: LocalEGA
spec:
  replicas: 1
  selector:
    app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: centos/postgresql-96-centos7
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRESQL_USER
          valueFrom:
            configMapKeyRef:
              name: lega-db-config
              key: user
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: lega-db-secret
              key: postgres_password
        - name: POSTGRESQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: lega-db-config
              key: dbname
        ports:
        - name: postgres
          containerPort: 5432
        volumeMounts:
        - name: data
          mountPath: /var/lib/pgsql/data
        - mountPath: /usr/share/container-scripts
          name: initdb
        livenessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - pg_isready -h 127.0.0.1 -p 5432
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
        readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - >-
                  psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d
                  $POSTGRESQL_DATABASE -c 'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: db-storage
      - name: initdb
        configMap:
          name: initsql
          items:
            - key: set_passwords.sh
              path: postgresql/start/set_passwords.sh
            - key: db.sql
              path: db.sql
            - key: common.sh
              path: postgresql/common.sh
            - key:  scl_enable
              path: postgresql/scl_enable
            - key: openshift-custom-recovery.conf.template
              path: postgresql/openshift-custom-recovery.conf.template
            - key: openshift-custom-postgresql.conf.template
              path: postgresql/openshift-custom-postgresql.conf.template
            - key: openshift-custom-postgresql-replication.conf.template
              path: postgresql/openshift-custom-postgresql-replication.conf.template
  triggers:
  - type: ConfigChange
  strategy:
    type: Rolling
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
