apply from: "$rootDir/utils.gradle"

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://github.com/uio-bmi/crypt4gh/raw/maven"
        }
    }

    dependencies {
        classpath "org.bouncycastle:bcpg-jdk15on:1.59"
        classpath "org.bouncycastle:bcpkix-jdk15on:1.59"
        classpath "commons-io:commons-io:2.5"
        classpath "commons-codec:commons-codec:1.11"
        classpath "com.hierynomus:sshj:0.22.0"
        classpath "com.rabbitmq:amqp-client:5.1.1"
        classpath "io.minio:minio:4.0.2"
        classpath "no.uio.ifi:crypt4gh:1.0.0"
    }
}

task clean() {
    group "swarm"

    dependsOn ":cega:clearCEGAConfiguration", ":lega:clearLEGAConfiguration"
    doLast {
        new File(".tmp").deleteDir()
    }
}

task bootstrap() {
    group "swarm"

    dependsOn ":cega:createCEGAConfiguration", ":lega:createLEGAConfiguration"
}

task deploy() {
    group "swarm"

    dependsOn ":cega:deployCEGAStack", ":lega:deployLEGAStack"
}

task rm() {
    group "swarm"

    doLast {
        exec {
            executable "docker"
            args "stack", "rm", "lega"
        }
        sleep 10000
        exec {
            executable "docker"
            args "stack", "rm", "cega"
        }
    }
}

task ls() {
    group "swarm"

    doLast {
        exec {
            executable "docker"
            args "service", "list"
        }
    }
}

task file {
    group "test"

    doLast {
        generateFile()
    }
}

task encrypt() {
    group "test"

    dependsOn file

    doLast {
        encryptFile()
    }
}

task upload() {
    group "test"

    dependsOn encrypt

    doLast {
        uploadFile()
    }
}

task ingest() {
    group "test"

    dependsOn upload

    doLast {
        int before = getFilesAmount()
        ingestFile()
        sleep 5000
        int after = getFilesAmount()
        if (after != before + 1) {
            throw new GradleException("File was not ingested!")
        }
    }
}
