import se.nbis.lega.deployment.ClearConfigurationTask
import se.nbis.lega.deployment.DeployStackTask
import se.nbis.lega.deployment.RemoveStackTask
import se.nbis.lega.deployment.RemoveVolumesTask
import se.nbis.lega.deployment.lega.*

import java.util.stream.Collectors

task removeVolumes(type: RemoveVolumesTask) {
    group "lega"

    setVolumes Arrays.stream(Volume.values()).map { v -> v.getName() }.collect(Collectors.toSet())
}

task clearConfiguration(type: ClearConfigurationTask) {
    group "lega"

    setConfigs Arrays.stream(Config.values()).map { c -> c.getName() }.collect(Collectors.toSet())
}

task createMQConfiguration(type: CreateMQConfigurationTask)

task createDBConfiguration(type: CreateDBConfigurationTask)

task createInboxConfiguration(type: CreateInboxConfigurationTask)

task createIngestConfiguration(type: CreateIngestConfigurationTask)

task createKeysConfiguration(type: CreateKeysConfigurationTask)

task createMinioConfiguration(type: CreateMinioConfigurationTask)

task createConfIni(type: CreateConfIniConfigurationTask)

task createKeysIni(type: CreateKeysIniConfigurationTask)

task createConfiguration {
    group "lega"

    dependsOn clearConfiguration, createConfIni, createKeysIni
}

task deployStack(type: DeployStackTask) {
    group "lega"

    setComposeFile file("docker-stack.yml").absolutePath
    setStackName "lega"
    setEnvironment getTraceAsMap()
}

task removeStack(type: RemoveStackTask) {
    group "lega"

    setStackName "lega"
}