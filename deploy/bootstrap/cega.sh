#!/usr/bin/env bash
set -e

echomsg "Generating fake Central EGA users"

mkdir -p ${PRIVATE}/cega/users/{pgp,lega,lega_ids}
chmod 777 ${PRIVATE}/cega/users/lega
chmod 777 ${PRIVATE}/cega/users/lega_ids

EGA_USER_PASSWORD_JOHN=$(generate_password 16)
EGA_USER_PASSWORD_JANE=$(generate_password 16)
EGA_USER_PASSWORD_TAYLOR=$(generate_password 16)

EGA_USER_PUBKEY_JOHN=${PRIVATE}/cega/users/john.pub
EGA_USER_SECKEY_JOHN=${PRIVATE}/cega/users/john.sec

EGA_USER_PUBKEY_JANE=${PRIVATE}/cega/users/jane.pub
EGA_USER_SECKEY_JANE=${PRIVATE}/cega/users/jane.sec

${OPENSSL} genrsa -out ${EGA_USER_SECKEY_JOHN} -passout pass:${EGA_USER_PASSWORD_JOHN} 2048
${OPENSSL} rsa -in ${EGA_USER_SECKEY_JOHN} -passin pass:${EGA_USER_PASSWORD_JOHN} -pubout -out ${EGA_USER_PUBKEY_JOHN}
chmod 400 ${EGA_USER_SECKEY_JOHN}

${OPENSSL} genrsa -out ${EGA_USER_SECKEY_JANE} -passout pass:${EGA_USER_PASSWORD_JANE} 2048
${OPENSSL} rsa -in ${EGA_USER_SECKEY_JANE} -passin pass:${EGA_USER_PASSWORD_JANE} -pubout -out ${EGA_USER_PUBKEY_JANE}
chmod 400 ${EGA_USER_SECKEY_JANE}

EGA_USERID=1
# See https://en.wikipedia.org/wiki/User_identifier#Type

cat > ${PRIVATE}/cega/users/john.yml <<EOF
---
username: john
password_hash: $(${OPENSSL} passwd -1 ${EGA_USER_PASSWORD_JOHN})
pubkey: $(ssh-keygen -i -mPKCS8 -f ${EGA_USER_PUBKEY_JOHN})
uid: ${EGA_USERID}
gecos: EGA User John
EOF
(
    cd ${PRIVATE}/cega/users/lega
    ln -s ../john.yml .
    cd ../lega_ids
    ln -s ../john.yml ${EGA_USERID}.yml
)
((EGA_USERID++))

cat > ${PRIVATE}/cega/users/jane.yml <<EOF
---
username: jane
pubkey: $(ssh-keygen -i -mPKCS8 -f ${EGA_USER_PUBKEY_JANE})
uid: ${EGA_USERID}
gecos: EGA User Jane
EOF
(
    cd ${PRIVATE}/cega/users/lega
    ln -s ../jane.yml .
    cd ../lega_ids
    ln -s ../jane.yml ${EGA_USERID}.yml
)
((EGA_USERID++))

cat > ${PRIVATE}/cega/users/taylor.yml <<EOF
---
username: taylor
password_hash: $(${OPENSSL} passwd -1 ${EGA_USER_PASSWORD_TAYLOR})
uid: ${EGA_USERID}
gecos: EGA User Taylor
EOF
(
    cd ${PRIVATE}/cega/users/lega
    ln -s ../taylor.yml .
    cd ../lega_ids
    ln -s ../taylor.yml ${EGA_USERID}.yml
)
((EGA_USERID++))

cat > ${PRIVATE}/cega/users/test.yml <<EOF
---
username: test
password_hash: $(${OPENSSL} passwd -1 test)
uid: ${EGA_USERID}
gecos: Test EGA User
EOF
(
    cd ${PRIVATE}/cega/users/lega
    ln -s ../test.yml .
    cd ../lega_ids
    ln -s ../test.yml ${EGA_USERID}.yml
)
((EGA_USERID++))

# bcrypt hash for the password: "hello"
cat > ${PRIVATE}/cega/users/hello.yml <<EOF
---
username: hello
password_hash: \$2a\$10\$4.Gudn/h3607Ux7tdel5JefD52Auk7YXolUP9Lu0zMDT/0UpZ.YAu
uid: ${EGA_USERID}
gecos: EGA User Hello
EOF
(
    cd ${PRIVATE}/cega/users/lega
    ln -s ../hello.yml .
    cd ../lega_ids
    ln -s ../hello.yml ${EGA_USERID}.yml
)
((EGA_USERID++))

echomsg "Generating PGP keys for EGA users"

# Running in a container
GEN_KEY="python3.6 /tmp/generate_pgp_key.py"

${GEN_KEY} "John Travolta" "john@ega.eu" "John" --passphrase "hi-john" --pub ${PRIVATE}/cega/users/pgp/john.pub --priv ${PRIVATE}/cega/users/pgp/john.sec --armor
chmod 644 ${PRIVATE}/cega/users/pgp/john.pub

${GEN_KEY} "Jane Fonda" "jane@ega.eu" "Jane" --passphrase "hi-jane" --pub ${PRIVATE}/cega/users/pgp/jane.pub --priv ${PRIVATE}/cega/users/pgp/jane.sec --armor
chmod 644 ${PRIVATE}/cega/users/pgp/jane.pub

${GEN_KEY} "Taylor Swift" "taylor@ega.eu" "Taylor" --passphrase "hi-taylor" --pub ${PRIVATE}/cega/users/pgp/taylor.pub --priv ${PRIVATE}/cega/users/pgp/taylor.sec --armor
chmod 644 ${PRIVATE}/cega/users/pgp/taylor.pub

PASS_HASH="python3.6 /tmp/rabbitmq_hash.py"

cat >> ${PRIVATE}/cega/.trace <<EOF
#####################################################################
#
# Generated by bootstrap/lib/cega_users.sh
#
#####################################################################
#
EGA_USER_PASSWORD_JOHN    = ${EGA_USER_PASSWORD_JOHN}
EGA_USER_PUBKEY_JOHN      = ./private/cega/users/john.pub
EGA_USER_PUBKEY_JANE      = ./private/cega/users/jane.pub
EGA_USER_PASSWORD_TAYLOR  = ${EGA_USER_PASSWORD_TAYLOR}
#
EGA_USER_PGP_JOHN         = ./private/cega/users/pgp/john.pub
EGA_USER_PGP_JANE         = ./private/cega/users/pgp/jane.pub
EGA_USER_PGP_TAYLOR       = ./private/cega/users/pgp/taylor.pub
PASS_HASH = $(${PASS_HASH} ${CEGA_MQ_PASSWORD})
CEGA_MQ_PASSWORD = ${CEGA_MQ_PASSWORD}
# =============================
EOF

cat > ${PRIVATE}/cega.yml <<EOF
version: '3.2'

networks:
    # user overlay in swarm mode
    # default is bridge
  cega:
    driver: bridge

services:

  ############################################
  # Faking Central EGA
  ############################################
  cega-mq:
    hostname: cega-mq
    ports:
      - "15670:15672"
      - "5672:5672"
    image: rabbitmq:3.6.14-management
    container_name: cega-mq
    labels:
        lega_label: "cega-mq"
    volumes:
       - ./cega/mq/defs.json:/etc/rabbitmq/defs.json:ro
       - ./cega/mq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
    restart: on-failure:3
    networks:
      - cega

  cega-users:
    env_file: cega/env
    image: nbisweden/ega-base:dev
    hostname: cega-users
    container_name: cega-users
    labels:
        lega_label: "cega-users"
    #ports:
    #  - "9100:80"
    expose:
      - "80"
    volumes:
      - ./cega/users:/cega/users:rw
      - ../images/cega/users.html:/cega/users.html
      - ../images/cega/server.py:/cega/server.py
      # - ../..:/root/.local/lib/python3.6/site-packages:ro
    restart: on-failure:3
    networks:
      - cega
    command: ["python3.6", "/cega/server.py"]
EOF
if [[ $KEYSERVER != 'ega' ]]; then
cat >> ${PRIVATE}/cega.yml <<EOF
  ############################################
  # Fake Eureka server
  ############################################
  cega-eureka:
    hostname: cega-eureka
    #ports:
    #  - "8761:8761"
    expose:
      - 8761
    image: nbisweden/ega-base:dev
    container_name: cega-eureka
    labels:
        lega_label: "cega-eureka"
    volumes:
      - ../images/cega/eureka.py:/cega/eureka.py
    restart: on-failure:3
    networks:
      - cega
    command: ["python3.6", "/cega/eureka.py"]
EOF
fi

# Only one instance, called 'lega'
cat > ${PRIVATE}/cega/env <<EOF
LEGA_INSTANCES=lega
CEGA_REST_lega_PASSWORD=${CEGA_REST_PASSWORD}
EOF

echomsg "Generating passwords for the Message Broker"

mkdir -p ${PRIVATE}/cega/mq
cat > ${PRIVATE}/cega/mq/defs.json <<EOF
{"rabbit_version":"3.6.14",
 "users":[{"name":"lega","password_hash":"$(${PASS_HASH} ${CEGA_MQ_PASSWORD})","hashing_algorithm":"rabbit_password_hashing_sha256","tags":"administrator"}],
 "vhosts":[{"name":"lega"}],
 "permissions":[{"user":"lega", "vhost":"lega", "configure":".*", "write":".*", "read":".*"}],
 "parameters":[],
 "global_parameters":[{"name":"cluster_name", "value":"rabbit@localhost"}],
 "policies":[],
 "queues":[{"name":"v1.inbox",           "vhost":"lega", "durable":true, "auto_delete":false, "arguments":{}},
           {"name":"v1.stableIDs",       "vhost":"lega", "durable":true, "auto_delete":false, "arguments":{}},
	   {"name":"v1.files",           "vhost":"lega", "durable":true, "auto_delete":false, "arguments":{}},
	   {"name":"v1.completed",       "vhost":"lega", "durable":true, "auto_delete":false, "arguments":{}},
	   {"name":"v1.errors",          "vhost":"lega", "durable":true, "auto_delete":false, "arguments":{}}],
 "exchanges":[{"name":"localega.v1", "vhost":"lega", "type":"topic", "durable":true, "auto_delete":false, "internal":false, "arguments":{}}],
 "bindings":[{"source":"localega.v1","vhost":"lega","destination_type":"queue","arguments":{},"destination":"v1.inbox","routing_key":"files.inbox"},
	     {"source":"localega.v1","vhost":"lega","destination_type":"queue","arguments":{},"destination":"v1.stableIDs","routing_key":"files.stableIDs"},
	     {"source":"localega.v1","vhost":"lega","destination_type":"queue","arguments":{},"destination":"v1.files","routing_key":"files"},
	     {"source":"localega.v1","vhost":"lega","destination_type":"queue","arguments":{},"destination":"v1.completed","routing_key":"files.completed"},
	     {"source":"localega.v1","vhost":"lega","destination_type":"queue","arguments":{},"destination":"v1.errors","routing_key":"files.error"}]
}
EOF

cat > ${PRIVATE}/cega/mq/rabbitmq.config <<EOF
%% -*- mode: erlang -*-
%%
[{rabbit,[{loopback_users, [ ] },
	  {disk_free_limit, "1GB"}]},
 {rabbitmq_management, [ {load_definitions, "/etc/rabbitmq/defs.json"} ]}
].
EOF
